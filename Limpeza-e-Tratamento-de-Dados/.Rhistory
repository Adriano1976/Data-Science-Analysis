#importa dados, string vazio como NA, string como fatores
dados = read.csv("Churn.csv", sep = ";", na.strings="", stringsAsFactors=T)
head(dados)
summary(dados)
# Este código em R lê um arquivo chamado "Churn.csv" que contém dados, separados por ponto e vírgula, sobre alguma coisa chamada "Churn". Em seguida, ele mostra as primeiras linhas desses dados usando a função "head" e um resumo estatístico usando a função "summary".
# Importa dados, string vazio como NA, string como fatores
dados = read.csv("Churn.csv", sep = ";", na.strings="", stringsAsFactors=T)
head(dados)
summary(dados)
# Este código em R renomeia as colunas de um conjunto de dados para os nomes especificados: "Id", "Score", "Estado", "Gênero", "Idade", "Patrimônio", "Saldo", "Produtos", "TemCartãoCredito", "Ativo", "Salário" e "Saiu". Em seguida, ele exibe as primeiras linhas desse conjunto de dados.
colnames(dados) = c("Id","Score","Estado","Genero","Idade","Patrimonio","Saldo","Produtos","TemCartCredito","Ativo","Salario","Saiu")
head(dados)
# Estados - O código conta quantas vezes cada estado aparece na coluna "Estado" dos dados e cria um gráfico de barras mostrando essas contagens. O título do gráfico é "Estados" e o eixo horizontal é rotulado como "Estados".
counts = table(dados$Estado)
barplot(counts, main="Estados", xlab="Estados")
#Gênero
counts = table(dados$Genero)
barplot(counts, main="Gêneros", xlab="Gêneros")
# Score - Esse código R resume estatísticas básicas do conjunto de dados na coluna "Score", mostrando valores como média, mediana e quartis. Em seguida, ele cria um gráfico de caixa que apresenta a distribuição e possíveis valores discrepantes dessa mesma coluna. Por fim, é criado um histograma para visualizar como os valores estão distribuídos em diferentes intervalos.
summary(dados$Score)
boxplot(dados$Score)
hist(dados$Score)
# Esse código em R faz três coisas com a variável "Idade" dos dados: primeiro, ele apresenta um resumo estatístico; em seguida, cria um gráfico de caixa (boxplot) para mostrar a distribuição; por fim, gera um histograma para ilustrar como os valores de idade estão agrupados.
summary(dados$Idade)
boxplot(dados$Idade)
hist(dados$Idade)
# Esse código em R faz três coisas com a variável "Idade" dos dados: primeiro, ele apresenta um resumo estatístico; em seguida, cria um gráfico de caixa (boxplot) para mostrar a distribuição; por fim, gera um histograma para ilustrar como os valores de idade estão agrupados.
summary(dados-Idade)
# Esse código em R faz três coisas com a variável "Idade" dos dados: primeiro, ele apresenta um resumo estatístico; em seguida, cria um gráfico de caixa (boxplot) para mostrar a distribuição; por fim, gera um histograma para ilustrar como os valores de idade estão agrupados.
summary(dados$Idade)
boxplot(dados$Idade)
hist(dados$Idade)
# Esse código em R resume estatísticas do atributo "Saldo" de um conjunto de dados, mostrando informações como mínimo, máximo e média, mediana e quartis. Em seguida, cria um gráfico de caixa (boxplot) para visualizar a distribuição desse atributo e um histograma para ver como os valores estão agrupados.
summary(dados$Saldo)
boxplot(dados$Saldo)
hist(dados$Saldo)
# O código analisa os salários de um conjunto de dados no R. A primeira linha mostra um resumo estatístico dos salários. A segunda linha cria um gráfico de caixa (boxplot) para visualizar a distribuição dos salários. A terceira linha recria o gráfico de caixa, mas sem mostrar os contornos externos dos valores, focando apenas na representação dos dados principais.
summary(dados$Salario)
boxplot(dados$Salario)
boxplot(dados$Salario,outline = F)
# Esse código R filtra um conjunto de dados, selecionando apenas as linhas que não estão completas, ou seja, aquelas que possuem valores ausentes em pelo menos uma coluna. Ele usa a função `complete.cases()` para identificar as linhas completas, e o operador `!` inverte essa lógica, selecionando as linhas não completas do conjunto de dados "dados".
dados[!complete.cases(dados),]
summary(dados$Salario)
median(dados$Salario,na.rm = T)
dados[is.na(dados$Salario),]$Salario = median(dados$Salario,na.rm = T)
dados[is.na(dados$Salario),]$Salario = median(dados$Salario,na.rm = T)
dados[!complete.cases(dados$Salario),]
unique(dados$Genero)
summary(dados$Genero)
unique(dados$Genero)
summary(dados$Genero)
dados[is.na(dados$Genero) | dados$Genero == "M" ,]$Genero = "Masculino"
dados[dados$Genero == "F" | dados$Genero == "Fem", ]$Genero = "Feminino"
summary(dados$Genero)
dados$Genero = factor(dados$Genero)
summary(dados$Genero)
summary(dados$Idade)
dados[dados$Idade < 0 | dados$Idade > 110 ,]$Idade
dados[is.na(dados$Idade),]
median(dados$Idade)
dados[dados$Idade < 0 | dados$Idade > 110 ,]$Idade = median(dados$Idade)
dados[dados$Idade < 0 | dados$Idade > 110 ,]
summary(dados$Idade)
x = dados[duplicated(dados$Id),]
x
dados = dados[-c(82),]
dados[dados$Id == x$Id ,]
x =  dados[duplicated(dados$Id),]
x
unique(dados$Estado)
summary(dados$Estado)
dados[!dados$Estado %in% c("RS","SC","PR"),]$Estado = "RS"
summary(dados$Estado)
dados$Estado = factor(dados$Estado)
summary(dados$Estado)
desv = sd(dados$Salario, na.rm = T)
desv
dados[dados$Salario >= 2 *desv  , ]$Salario
boxplot(dados$Salario)
boxplot(dados$Salario, outline = F)
x = boxplot(dados$Salario)$out
x
median(dados$Salario)
dados[dados$Salario >= 2 *desv  , ]$Salario = median(dados$Salario)
dados[dados$Salario >= 2 *desv  , ]$Salario
#importa dados, string vazio como NA, string como fatores
dados = read.csv("Tempo.csv", sep = ";", na.strings="", stringsAsFactors=T)
#importa dados, string vazio como NA, string como fatores
dados = read.csv("Tempo.csv", sep = ";", na.strings="", stringsAsFactors=T)
head(dados)
summary(dados)
# Aparencia
counts = table(dados$Aparencia)
counts
barplot(counts, main="Aparencia", xlab="Aparencia")
# Gênero
counts = table(dados$Vento)
counts
barplot(counts, main="Vento", xlab="Vento")
#jogar
counts = table(dados$Jogar)
counts
barplot(counts, main="Jogar", xlab="Jogar")
# O código em R analisa um conjunto de dados chamado "dados". Ele calcula um resumo estatístico da variável "Temperatura", mostrando valores como média e quartis. Depois, cria um gráfico de caixa (boxplot) para representar a distribuição dessa variável e um histograma para mostrar a frequência dos diferentes valores de temperatura no conjunto de dados.
# Temperatura
summary(dados$Temperatura)
boxplot(dados$Temperatura)
hist(dados$Temperatura)
# Esse código R resume estatísticas da coluna "Umidade" dos seus dados, mostrando a média, mediana e outros valores. Depois, cria um gráfico de caixa que apresenta a distribuição dessa coluna. Por fim, gera um histograma para ilustrar como os valores de umidade estão distribuídos.
summary(dados$Umidade)
boxplot(dados$Umidade)
hist(dados$Umidade)
# O código R verifica uma estrutura de dados chamada 'dados' em busca de linhas que possuam valores faltantes (NAs) em pelo menos uma coluna. Em seguida, ele retorna as linhas que contêm esses valores faltantes, mostrando onde eles estão presentes na tabela.
# Valores faltantes NAs
dados[!complete.cases(dados),]
summary(dados$Aparencia)
# Não temos NAs
dados[is.na(dados$Aparencia),]
# Opção, preencher com mediana
# Subtituição com moda
dados[dados$Aparencia == 'menos' ,]$Aparencia = 'sol'
# Buscamos novamente aparencias
summary(dados$Aparencia)
# Remover levels não utilizados
dados$Aparencia =   factor(dados$Aparencia)
# Visualizar novamente
summary(dados$Aparencia)
summary(dados$Temperatura)
# Fora do dominio, numérico - ver idades anormais
dados[dados$Temperatura < -130 | dados$Temperatura > 130 ,]$Temperatura
# Não temos NAs
dados[is.na(dados$Temperatura),]
# Opção, preencher com mediana
median(dados$Temperatura)
# Subtituição
dados[dados$Temperatura < -135 | dados$Temperatura > 130 ,]$Temperatura = median(dados$Temperatura)
# Buscamos novamente temperaturas anormais
dados[dados$Temperatura< -135 | dados$Temperatura > 130 ,]$Temperatura
summary(dados$Temperatura)
summary(dados$Temperatura)
dados[dados$Temperatura < -130 | dados$Temperatura > 130 ,]$Temperatura
dados[is.na(dados$Temperatura),]
median(dados$Temperatura)
dados[dados$Temperatura < -135 | dados$Temperatura > 130 ,]$Temperatura = median(dados$Temperatura)
dados[dados$Temperatura< -135 | dados$Temperatura > 130 ,]$Temperatura
summary(dados$Temperatura)
summary(dados$Umidade)
# Em seguida, identifica e exibe os valores de umidade que estão fora do intervalo normal (menores que 0 ou maiores que 100).
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]$Umidade
# Depois, ele verifica se existem valores ausentes (NA) na coluna de umidade e os exibe.
dados[is.na(dados$Umidade),]
# Posteriormente, preenche os valores ausentes com a mediana da umidade, calculada sem considerar os valores ausentes.
dados[is.na(dados$Umidade),]$Umidade = median(dados$Umidade,na.rm = T)
#  Após isso, substitui novamente os valores de umidade que estão fora do intervalo normal pela mediana geral da umidade.
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]$Umidade = median(dados$Umidade)
# Por fim, busca novamente e mostra quaisquer valores de umidade anormais que possam ainda existir, e apresenta outro resumo estatístico da coluna "Umidade".
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]
summary(dados$Umidade)
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]$Umidade
dados[is.na(dados$Umidade),]
dados[is.na(dados$Umidade),]$Umidade = median(dados$Umidade,na.rm = T)
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]$Umidade = median(dados$Umidade)
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]
summary(dados$Umidade)
summary(dados$Vento)
dados[is.na(dados$Vento),]
dados[is.na(dados$Vento),]$Vento = 'FALSO'
dados[is.na(dados$Vento),]$Vento = 'FALSO'
dados[is.na(dados$Vento),]
summary(dados$Vento)
